{"ast":null,"code":"import axios from \"axios\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_TYPES = \"GET_TYPES\";\nexport const GET_DETAIL = \"GET_DETAIL\";\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\nexport const FILTER_BY_NAME = \"FILTER_BY_NAME\";\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\nexport const ORDER_NAME = \"ORDER_NAME\";\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\nexport const CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\nexport const getPokemons = () => {\n  return async function (dispatch) {\n    const info = await axios.get(\"http://localhost:3001/pokemons\");\n    dispatch({\n      type: GET_POKEMONS,\n      payload: info.data\n    });\n  };\n};\nexport const getTypes = () => {\n  return async function (dispatch) {\n    const typeInfo = await axios.get(\"http://localhost:3001/types\");\n    dispatch({\n      type: GET_TYPES,\n      payload: typeInfo.data\n    });\n  };\n};\nexport const detailPokemon = id => {\n  return async function (dispatch) {\n    const detail = await axios.get(`http://localhost:3001/pokemons/${id}`);\n    dispatch({\n      type: GET_DETAIL,\n      payload: detail.data\n    });\n  };\n};\nexport const filterByType = payload => {\n  return {\n    type: FILTER_BY_TYPE,\n    payload\n  };\n};\nexport const filterByName = name => {\n  try {\n    return async function (dispatch) {\n      const poke = await axios.get(`http://localhost:3001/pokemons?name=${name}`);\n      dispatch({\n        type: FILTER_BY_NAME,\n        payload: poke.data\n      });\n    };\n  } catch (error) {\n    alert('Pokemon not found');\n  }\n};\nexport const filterByCreated = payload => {\n  return {\n    type: FILTER_BY_CREATED,\n    payload\n  };\n};\nexport const orderName = payload => {\n  return {\n    type: ORDER_NAME,\n    payload\n  };\n};\nexport const orderByAttack = payload => {\n  return {\n    type: ORDER_BY_ATTACK,\n    payload\n  };\n};\nexport const createPokemon = payload => {\n  return async function () {\n    try {\n      const create = await axios.post(\"http://localhost:3001/pokemons\", payload);\n      alert(\"New pokemon has been created\");\n      return create;\n    } catch (error) {\n      alert(\"Pokemon name already exist\");\n    }\n  };\n};\nexport const cleanPokemons = dispatch => {\n  return dispatch({\n    type: CLEAN_POKEMONS,\n    payload: []\n  });\n};","map":{"version":3,"names":["axios","GET_POKEMONS","GET_TYPES","GET_DETAIL","FILTER_BY_TYPE","FILTER_BY_NAME","FILTER_BY_CREATED","ORDER_NAME","ORDER_BY_ATTACK","CREATE_POKEMON","CLEAN_POKEMONS","getPokemons","dispatch","info","get","type","payload","data","getTypes","typeInfo","detailPokemon","id","detail","filterByType","filterByName","name","poke","error","alert","filterByCreated","orderName","orderByAttack","createPokemon","create","post","cleanPokemons"],"sources":["C:/Users/allan/Desktop/PIs/PI-Pokemon-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_NAME = \"FILTER_BY_NAME\";\r\nexport const FILTER_BY_CREATED = \"FILTER_BY_CREATED\";\r\nexport const ORDER_NAME = \"ORDER_NAME\";\r\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\r\nexport const CREATE_POKEMON = \"CREATE_POKEMON\";\r\nexport const CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\r\n\r\n\r\nexport const getPokemons = () => {\r\n    return async function (dispatch) {\r\n        const info = await axios.get(\"http://localhost:3001/pokemons\")\r\n        dispatch({\r\n            type: GET_POKEMONS,\r\n            payload: info.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getTypes = () => {\r\n    return async function(dispatch) {\r\n        const typeInfo = await axios.get(\"http://localhost:3001/types\")\r\n        dispatch({\r\n            type: GET_TYPES,\r\n            payload: typeInfo.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const detailPokemon = (id) => {\r\n    return async function(dispatch) {\r\n        const detail = await axios.get(`http://localhost:3001/pokemons/${id}`);\r\n        dispatch({\r\n            type: GET_DETAIL,\r\n            payload: detail.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const filterByType = (payload) => {\r\n    return {\r\n        type: FILTER_BY_TYPE,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const filterByName = (name) => {\r\n    try {\r\n        return async function(dispatch){\r\n            const poke = await axios.get(`http://localhost:3001/pokemons?name=${name}`)\r\n            dispatch({\r\n                type: FILTER_BY_NAME,\r\n                payload: poke.data\r\n            })\r\n        }\r\n    } catch (error) {\r\n        alert('Pokemon not found')\r\n   }\r\n}\r\n\r\nexport const filterByCreated = (payload) => {\r\n    return {\r\n        type: FILTER_BY_CREATED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const orderName = (payload) => {\r\n    return {\r\n        type: ORDER_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderByAttack = (payload) => {\r\n    return {\r\n        type: ORDER_BY_ATTACK,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const createPokemon = (payload) => {\r\n    return async function(){\r\n        try {\r\n            const create = await axios.post(\"http://localhost:3001/pokemons\", payload)\r\n            alert(\"New pokemon has been created\")\r\n            return create;\r\n        } catch (error) {\r\n            alert(\"Pokemon name already exist\")   \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const cleanPokemons = (dispatch) => {\r\n    return dispatch({\r\n        type: CLEAN_POKEMONS,\r\n        payload: []\r\n    })\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}