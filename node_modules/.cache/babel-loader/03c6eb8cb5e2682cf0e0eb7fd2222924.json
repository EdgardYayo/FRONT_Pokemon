{"ast":null,"code":"import { CLEAN_POKEMONS, CREATE_POKEMON, FILTER_BY_CREATED, FILTER_BY_NAME, FILTER_BY_TYPE, GET_DETAIL, GET_POKEMONS, GET_TYPES, ORDER_BY_ATTACK, ORDER_NAME } from \"./actions\";\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  detailPokemon: {},\n  types: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        detailPokemon: action.payload\n      };\n    case FILTER_BY_TYPE:\n      const allPokemons = state.allPokemons;\n      const typeFiltered = action.payload === 'All' ? allPokemons : allPokemons.filter(p => p.types.some(e => e.name === action.payload));\n      return {\n        ...state,\n        pokemons: typeFiltered\n      };\n    case FILTER_BY_NAME:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case FILTER_BY_CREATED:\n      let pokeCreated = state.allPokemons;\n      let filterCreated;\n      if (action.payload === 'created') {\n        filterCreated = pokeCreated.filter(p => p.createdInDb);\n      } else if (action.payload === 'api') {\n        filterCreated = pokeCreated.filter(p => !p.createdInDb);\n      } else {\n        filterCreated = pokeCreated;\n      }\n      return {\n        ...state,\n        pokemons: filterCreated\n      };\n    case ORDER_NAME:\n      let pokename = state.allPokemons;\n      let nameOrder;\n      if (action.payload === 'asc') {\n        nameOrder = pokename.sort((a, b) => {\n          return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n        });\n      } else if (action.payload === 'desc') {\n        nameOrder = pokename.sort((a, b) => {\n          return b.name.toLowerCase().localeCompare(a.name.toLowerCase());\n        });\n      } else {\n        nameOrder = state.pokemons;\n      }\n      return {\n        ...state,\n        pokemons: nameOrder\n      };\n    case ORDER_BY_ATTACK:\n      let pokeAttack = state.allPokemons;\n      let orderAttack = action.payload === 'asc' ? pokeAttack.sort((a, b) => b.attack - a.attack) : action.payload === 'desc' ? pokeAttack.sort((a, b) => a.attack - b.attack) : state.pokemons;\n      return {\n        ...state,\n        pokemons: orderAttack\n      };\n    case CREATE_POKEMON:\n      return {\n        ...state\n      };\n    case CLEAN_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["CLEAN_POKEMONS","CREATE_POKEMON","FILTER_BY_CREATED","FILTER_BY_NAME","FILTER_BY_TYPE","GET_DETAIL","GET_POKEMONS","GET_TYPES","ORDER_BY_ATTACK","ORDER_NAME","initialState","pokemons","allPokemons","detailPokemon","types","rootReducer","state","action","type","payload","typeFiltered","filter","p","some","e","name","pokeCreated","filterCreated","createdInDb","pokename","nameOrder","sort","a","b","toLowerCase","localeCompare","pokeAttack","orderAttack","attack"],"sources":["C:/Users/allan/Desktop/PIs/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import { CLEAN_POKEMONS, CREATE_POKEMON, FILTER_BY_CREATED, FILTER_BY_NAME, FILTER_BY_TYPE, GET_DETAIL, GET_POKEMONS, GET_TYPES, ORDER_BY_ATTACK, ORDER_NAME } from \"./actions\";\r\n\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    allPokemons: [],\r\n    detailPokemon: {},\r\n    types: []\r\n}\r\n\r\nconst rootReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n                allPokemons: action.payload\r\n            }\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload\r\n            }\r\n        case GET_DETAIL:\r\n            return {\r\n                ...state,\r\n                detailPokemon: action.payload\r\n            }\r\n        case FILTER_BY_TYPE:\r\n            const allPokemons = state.allPokemons\r\n            const typeFiltered = action.payload === 'All'? allPokemons : allPokemons.filter(p => p.types.some(e => e.name === action.payload))\r\n            return {\r\n                ...state,\r\n                pokemons: typeFiltered\r\n            }\r\n\r\n        case FILTER_BY_NAME:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload\r\n            }\r\n        \r\n        case FILTER_BY_CREATED:\r\n            let pokeCreated = state.allPokemons;\r\n            let filterCreated;\r\n            if(action.payload === 'created'){\r\n               filterCreated = pokeCreated.filter(p => p.createdInDb) \r\n            } else if (action.payload === 'api'){\r\n                filterCreated = pokeCreated.filter(p => !p.createdInDb);\r\n            } else {\r\n                filterCreated = pokeCreated;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pokemons: filterCreated\r\n            }\r\n        case ORDER_NAME:\r\n            let pokename = state.allPokemons;\r\n            let nameOrder; \r\n            if(action.payload === 'asc'){\r\n                nameOrder = pokename.sort((a, b) => {\r\n                    return a.name.toLowerCase().localeCompare(b.name.toLowerCase())\r\n                }) \r\n            } else if(action.payload === 'desc') {\r\n                nameOrder = pokename.sort((a, b) => {\r\n                    return b.name.toLowerCase().localeCompare(a.name.toLowerCase())\r\n                })\r\n            } else {\r\n                nameOrder = state.pokemons\r\n            }\r\n            return {\r\n                ...state,\r\n                pokemons: nameOrder\r\n\r\n            }\r\n        case ORDER_BY_ATTACK:\r\n            let pokeAttack = state.allPokemons\r\n            let orderAttack = action.payload === 'asc' ? \r\n                pokeAttack.sort((a, b) => b.attack - a.attack) : action.payload === 'desc' ?\r\n                pokeAttack.sort((a, b) => a.attack - b.attack) : state.pokemons;\r\n            \r\n            return {\r\n                ...state,\r\n                pokemons: orderAttack\r\n            }\r\n        case CREATE_POKEMON:\r\n            return {\r\n                ...state\r\n            }\r\n        case CLEAN_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}