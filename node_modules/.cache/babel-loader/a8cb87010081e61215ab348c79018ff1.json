{"ast":null,"code":"import { FILTER_BY_NAME, FILTER_BY_TYPE, GET_DETAIL, GET_POKEMONS, GET_TYPES, ORDER_BY_ATTACK, ORDER_NAME } from \"./actions\";\nconst initialState = {\n  pokemons: [],\n  detailPokemon: {},\n  allPokemons: [],\n  types: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        detailPokemon: action.payload\n      };\n    case FILTER_BY_TYPE:\n      const allPokemons = state.pokemons;\n      const typeFiltered = action.payload === 'All' ? allPokemons : allPokemons.filter(p => p.types.includes(action.payload));\n      return {\n        ...state,\n        pokemons: typeFiltered\n      };\n    case FILTER_BY_NAME:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case ORDER_NAME:\n      let pokename = state.pokemons;\n      let nameOrder = action.payload === 'A-Z' ? pokename.sort((a, b) => {\n        return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n      }) : pokename.sort((a, b) => {\n        return b.name.toLowerCase().localeCompare(a.name.toLowerCase());\n      });\n      return {\n        ...state,\n        pokemons: nameOrder\n      };\n    case ORDER_BY_ATTACK:\n      let pokeAttack = state.pokemons;\n      let orderAttack = action.payload === '++' ? pokeAttack.sort((a, b) => a.attack - b.attack) : pokeAttack.sort((a, b) => b.attack - a.attack);\n      return {\n        ...state,\n        pokemons: orderAttack\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_BY_NAME","FILTER_BY_TYPE","GET_DETAIL","GET_POKEMONS","GET_TYPES","ORDER_BY_ATTACK","ORDER_NAME","initialState","pokemons","detailPokemon","allPokemons","types","rootReducer","state","action","type","payload","typeFiltered","filter","p","includes","pokename","nameOrder","sort","a","b","name","toLowerCase","localeCompare","pokeAttack","orderAttack","attack"],"sources":["C:/Users/allan/Desktop/PIs/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import { FILTER_BY_NAME, FILTER_BY_TYPE, GET_DETAIL, GET_POKEMONS, GET_TYPES, ORDER_BY_ATTACK, ORDER_NAME } from \"./actions\";\r\n\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    detailPokemon: {},\r\n    allPokemons: [],\r\n    types: []\r\n}\r\n\r\nconst rootReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n                allPokemons: action.payload\r\n            }\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload\r\n            }\r\n        case GET_DETAIL:\r\n            return {\r\n                ...state,\r\n                detailPokemon: action.payload\r\n            }\r\n        case FILTER_BY_TYPE:\r\n            const allPokemons = state.pokemons\r\n            const typeFiltered = action.payload === 'All'? allPokemons : allPokemons.filter(p => p.types.includes(action.payload))\r\n            return {\r\n                ...state,\r\n                pokemons: typeFiltered\r\n            }\r\n\r\n        case FILTER_BY_NAME:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload\r\n            }\r\n        case ORDER_NAME:\r\n            let pokename = state.pokemons;\r\n            let nameOrder = action.payload === 'A-Z' ?\r\n                pokename.sort((a, b) => {\r\n                    return a.name.toLowerCase().localeCompare(b.name.toLowerCase())\r\n                }) :\r\n                pokename.sort((a, b) => {\r\n                    return b.name.toLowerCase().localeCompare(a.name.toLowerCase())\r\n                })\r\n            return {\r\n                ...state,\r\n                pokemons: nameOrder\r\n\r\n            }\r\n        case ORDER_BY_ATTACK:\r\n            let pokeAttack = state.pokemons\r\n            let orderAttack = action.payload === '++' ? \r\n                pokeAttack.sort((a, b) => a.attack - b.attack) :\r\n                pokeAttack.sort((a, b) => b.attack - a.attack);\r\n            return {\r\n                ...state,\r\n                pokemons: orderAttack\r\n            }\r\n            \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,cAAc,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,eAAe,EAAEC,UAAU,QAAQ,WAAW;AAG5H,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,CAAC,CAAC;EACjBC,WAAW,EAAE,EAAE;EACfC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAG,YAAmC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKZ,YAAY;MACb,OAAO;QACH,GAAGU,KAAK;QACRL,QAAQ,EAAEM,MAAM,CAACE,OAAO;QACxBN,WAAW,EAAEI,MAAM,CAACE;MACxB,CAAC;IACL,KAAKZ,SAAS;MACV,OAAO;QACH,GAAGS,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;IACL,KAAKd,UAAU;MACX,OAAO;QACH,GAAGW,KAAK;QACRJ,aAAa,EAAEK,MAAM,CAACE;MAC1B,CAAC;IACL,KAAKf,cAAc;MACf,MAAMS,WAAW,GAAGG,KAAK,CAACL,QAAQ;MAClC,MAAMS,YAAY,GAAGH,MAAM,CAACE,OAAO,KAAK,KAAK,GAAEN,WAAW,GAAGA,WAAW,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACR,KAAK,CAACS,QAAQ,CAACN,MAAM,CAACE,OAAO,CAAC,CAAC;MACtH,OAAO;QACH,GAAGH,KAAK;QACRL,QAAQ,EAAES;MACd,CAAC;IAEL,KAAKjB,cAAc;MACf,OAAO;QACH,GAAGa,KAAK;QACRL,QAAQ,EAAEM,MAAM,CAACE;MACrB,CAAC;IACL,KAAKV,UAAU;MACX,IAAIe,QAAQ,GAAGR,KAAK,CAACL,QAAQ;MAC7B,IAAIc,SAAS,GAAGR,MAAM,CAACE,OAAO,KAAK,KAAK,GACpCK,QAAQ,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpB,OAAOD,CAAC,CAACE,IAAI,CAACC,WAAW,EAAE,CAACC,aAAa,CAACH,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAAC;MACnE,CAAC,CAAC,GACFN,QAAQ,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpB,OAAOA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,aAAa,CAACJ,CAAC,CAACE,IAAI,CAACC,WAAW,EAAE,CAAC;MACnE,CAAC,CAAC;MACN,OAAO;QACH,GAAGd,KAAK;QACRL,QAAQ,EAAEc;MAEd,CAAC;IACL,KAAKjB,eAAe;MAChB,IAAIwB,UAAU,GAAGhB,KAAK,CAACL,QAAQ;MAC/B,IAAIsB,WAAW,GAAGhB,MAAM,CAACE,OAAO,KAAK,IAAI,GACrCa,UAAU,CAACN,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACO,MAAM,GAAGN,CAAC,CAACM,MAAM,CAAC,GAC9CF,UAAU,CAACN,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACM,MAAM,GAAGP,CAAC,CAACO,MAAM,CAAC;MAClD,OAAO;QACH,GAAGlB,KAAK;QACRL,QAAQ,EAAEsB;MACd,CAAC;IAEL;MACI,OAAO;QACH,GAAGjB;MACP,CAAC;EAAA;AAEb,CAAC;AAGD,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}